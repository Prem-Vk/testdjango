name: Migration Check

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - 'master'
    paths:
      - '**/migrations/**'

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pulls = github.rest.issues.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            });
            console.log(pulls)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Migration PR. PFB best practices for migrations.

                The removal of a field HAS TO be done with little more care in following deployment order:
                1. Make the field nullable in model & generate corresponding migration file.
                    If the column we’re deleting is already nullable, we can skip this step.
                2. Remove the field from the model and it’s usage from code. DO NOT generate a corresponding migration file.
                    This will make the Django ORM to stop including this field name in SELECT queries.
                3. Generate migration file for removing the field from database. ✨`
            })
