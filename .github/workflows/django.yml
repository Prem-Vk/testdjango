name: Migration Check

on:
  pull_request:
    types: [opened, edited, reopened]
    branches:
      - 'master'

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commentHeading = 'Migration file detected for PR number: ';
            const pr_number = context.issue.number;
            let filenames = [];

            function commentCreator(filenames, pr_number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${filenames} ${commentHeading} ${pr_number}`
              })
            }
            
            function commentDeleter(comment_id) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id : `${comment_id}`
              })
            }
            function getPullRequestComments(){
              console.log("Getting_all_comments")
              return github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              })
            }
            async function checkComments(all_comments){
              console.log(all_comments)
              if (all_comments.data.length === 0){return false};
              const format_all_comments = await github.paginate(all_comments)
              console.log("finded_all_comments", format_all_comments)
              for (const comment of format_all_comments){
                  let comment_body = comment.body
                  if (comment_body.includes(`${commentHeading} ${pr_number}`)) {
                      return String(comment.url)
                  }else{
                      return false
                  }
              }
            }
            async function listAllPullRequestFiles(){
                console.log("Getting_all_files");
                return await github.rest.pulls.listFiles({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                });
            }
            const pulls = await listAllPullRequestFiles();
            const issues = await github.paginate(pulls)

            for (const issue of issues) {
              let filename = String(issue.filename)
              if (filename.includes("migrations")){
                filenames.push(filename)
              }
            }
            console.log("all_filenames", filenames)
            const all_comments = await getPullRequestComments();
            console.log("saaree_comments_mil_gaye")
            const migration_comment_available = await checkComments(all_comments);
            console.log("all_commnets_checked")

            if (filenames.length > 0 && typeof migration_comment_available === 'boolean'){
                console.log("comment_creator")
                commentCreator(filenames, pr_number);
            }else if(typeof migration_comment_available === 'string'){
                console.log("comment_deletor")
                let comment_id = parseInt(migration_comment_available.split("/").pop())
                commentDeleter(comment_id)
            }
            
